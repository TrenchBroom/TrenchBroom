name: CPP Linter
on: [pull_request]

permissions:
  # This grants the GITHUB_TOKEN the necessary permissions for use with nuget.
  packages: write
  pull-requests: write

jobs:
  cpp-linter:
    runs-on: ubuntu-22.04

    env:
      # Record pull request head commit SHA
      TB_PULL_REQUEST_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
      # Set up environment variables required for caching vcpkg packages using NuGet
      # See https://learn.microsoft.com/en-us/vcpkg/consume/binary-caching-github-packages?pivots=windows-runner
      USERNAME: TrenchBroom
      VCPKG_EXE: ${{ github.workspace }}/vcpkg/vcpkg
      FEED_URL: https://nuget.pkg.github.com/TrenchBroom/index.json
      VCPKG_BINARY_SOURCES: "clear;nuget,https://nuget.pkg.github.com/TrenchBroom/index.json,readwrite"
      # Set up environment variables required for Mono (on macOS)
      # See https://formulae.brew.sh/formula/mono
      MONO_GAC_PREFIX: "$HOMEBREW_PREFIX"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'

      # Dependencies
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.7.0'

      - name: Bootstrap vcpkg
        shell: bash
        run: ${{ github.workspace }}/vcpkg/bootstrap-vcpkg.sh

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install build-essential libxi-dev libxrandr-dev libxxf86vm-dev freeglut3-dev mesa-common-dev libgl1-mesa-dev libglu1-mesa-dev libglm-dev pandoc cmake p7zip-full ninja-build xvfb libglew-dev libfreeimage-dev libfreetype6-dev libtinyxml2-dev libassimp-dev libfuse2

      - name: Add NuGet sources
        shell: bash
        run: |
          mono `${{ env.VCPKG_EXE }} fetch nuget | tail -n 1` \
            sources add \
            -Source "${{ env.FEED_URL }}" \
            -StorePasswordInClearText \
            -Name GitHubPackages \
            -UserName "${{ env.USERNAME }}" \
            -Password "${{ secrets.GITHUB_TOKEN }}"
          mono `${{ env.VCPKG_EXE }} fetch nuget | tail -n 1` \
            setapikey "${{ secrets.GITHUB_TOKEN }}" \
            -Source "${{ env.FEED_URL }}"

      - name: Run cmake
        run: |
          mkdir -p build
          cd build
          cmake .. -GNinja -DCMAKE_PREFIX_PATH="cmake/packages;$QT_ROOT_DIR" -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DTB_ENABLE_PCH=0

      - name: Run clang-tidy
        uses: cpp-linter/cpp-linter-action@v2
        id: linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: 18
          style: 'file'  # Use .clang-format config file. 
          tidy-checks: '' # Use .clang-tidy config file.
          files-changed-only: false
          database: ${{github.workspace}}/build
          ignore: 'build|vcpkg-overlay-ports|lib/stackwalker|common/src/ui/GetVersion.cpp'
          step-summary: true
          thread-comments: true
      - name: Fail fast?!
        if: steps.linter.outputs.clang-tidy-checks-failed > 0
        run: exit 1
