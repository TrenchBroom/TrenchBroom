diff --git src/gtk/window.cpp src/gtk/window.cpp
index 1f1c6244ec..0aef5f0987 100644
--- src/gtk/window.cpp
+++ src/gtk/window.cpp
@@ -1800,19 +1800,6 @@ gtk_window_motion_notify_callback( GtkWidget * WXUNUSED(widget),
 
     wxCOMMON_CALLBACK_PROLOGUE(gdk_event, win);
 
-    if (gdk_event->is_hint)
-    {
-        int x = 0;
-        int y = 0;
-#ifdef __WXGTK3__
-        gdk_window_get_device_position(gdk_event->window, gdk_event->device, &x, &y, NULL);
-#else
-        gdk_window_get_pointer(gdk_event->window, &x, &y, NULL);
-#endif
-        gdk_event->x = x;
-        gdk_event->y = y;
-    }
-
     g_lastMouseEvent = (GdkEvent*) gdk_event;
 
     wxMouseEvent event( wxEVT_MOTION );
@@ -1860,6 +1847,22 @@ gtk_window_motion_notify_callback( GtkWidget * WXUNUSED(widget),
 
     g_lastMouseEvent = NULL;
 
+    // Request more motion events, only after processing the wxWidgets event above.
+    // Needs to be done here rather than at the top of this function. Otherwise,
+    // events queued during GTKProcessEvent (e.g. Refresh() or other queued events
+    // can be delayed indefinitely when motion events are arriving quickly 
+    // (1000Hz mouse)).
+    if (gdk_event->is_hint)
+    {
+        int x = 0;
+        int y = 0;
+#ifdef __WXGTK3__
+        gdk_window_get_device_position(gdk_event->window, gdk_event->device, &x, &y, NULL);
+#else
+        gdk_window_get_pointer(gdk_event->window, &x, &y, NULL);
+#endif
+    }
+
     return ret;
 }
 
